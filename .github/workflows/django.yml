# .github/workflows/django.yml
name: Django CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: precommit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            precommit-${{ runner.os }}-

      - name: Run pre-commit (lint & format checks)
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: hockey_club.settings
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1

      # ---- CI-safe Django env ----
      DEBUG: "true"  # avoid prod-only guards during CI
      SECRET_KEY: "ci-test-secret-not-for-prod"
      ALLOWED_HOSTS: "localhost,127.0.0.1,testserver"
      CSRF_TRUSTED_ORIGINS: "http://localhost:8000,http://127.0.0.1:8000"
      EMAIL_BACKEND: "django.core.mail.backends.console.EmailBackend"
      REDIS_URL: "redis://localhost:6379/0"   # Celery not run in CI, but keeps settings happy
      WALLET_APPLE_ENABLED: "false"           # prevent walletpass import chain

      # (optional) make intention explicit
      ACCOUNT_DEFAULT_HTTP_PROTOCOL: "http"

      # Use SQLite fallback by leaving DATABASE_URL unset
      # DATABASE_URL: ""

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: System libs (safe even if unused)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libmariadb-dev libpq-dev

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-django pytest-cov

      - name: Prepare static dir (avoid staticfiles warning)
        run: mkdir -p static

      - name: Django checks (non-deploy)
        run: python manage.py check

      - name: Run tests
        run: pytest -q --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore
