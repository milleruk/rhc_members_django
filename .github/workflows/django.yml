name: Django CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies (lint only)
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: flake8
        run: flake8 .
      - name: black (check)
        run: black --check .
      - name: isort (check)
        run: isort --profile black --check-only .

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DJANGO_SETTINGS_MODULE: hockey_club.settings
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      # If you switch to MariaDB, set DATABASE_URL accordingly (see service below)
      # DATABASE_URL: mysql://django:django@127.0.0.1:3306/django?charset=utf8mb4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: System packages (for mysqlclient / psycopg2, harmless if unused)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libmariadb-dev libpq-dev

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies (test)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Test deps (lightweight even if already in your reqs)
          pip install pytest pytest-django pytest-cov

      - name: Django checks
        run: |
          python manage.py check --deploy --fail-level WARNING

      - name: Run tests (pytest + coverage)
        run: |
          pytest -q --cov=. --cov-report=xml --cov-report=term-missing
        continue-on-error: false

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore

    # Uncomment this to require lint to pass before tests run:
    # needs: [lint]

    # If you want to run tests against MariaDB in CI, uncomment the "services" block
    # and set DATABASES in Django to read DATABASE_URL env (e.g., via dj-database-url)
    #
    # services:
    #   mariadb:
    #     image: mariadb:11
    #     env:
    #       MARIADB_DATABASE: django
    #       MARIADB_USER: django
    #       MARIADB_PASSWORD: django
    #       MARIADB_ROOT_PASSWORD: root
    #     ports:
    #       - 3306:3306
    #     options: >-
    #       --health-cmd="mysqladmin ping -hd127.0.0.1 -uroot -proot"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=10
